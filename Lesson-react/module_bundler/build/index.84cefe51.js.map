{"mappings":"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","sources":["<anon>","node_modules/moment/moment.js","src/app.js","src/components/Header.js","src/components/Footer.js","src/pages/Home.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4d5e\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4d5e\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"45fvw\", function(module, exports) {\n//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n(function(global, factory) {\n    module.exports = factory();\n})(this, function() {\n    \"use strict\";\n    var hookCallback;\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === \"[object Array]\";\n    }\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === \"[object Object]\";\n    }\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) return Object.getOwnPropertyNames(obj).length === 0;\n        else {\n            var k;\n            for(k in obj){\n                if (hasOwnProp(obj, k)) return false;\n            }\n            return true;\n        }\n    }\n    function isUndefined(input) {\n        return input === void 0;\n    }\n    function isNumber(input) {\n        return typeof input === \"number\" || Object.prototype.toString.call(input) === \"[object Number]\";\n    }\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === \"[object Date]\";\n    }\n    function map(arr, fn) {\n        var res = [], i, arrLen = arr.length;\n        for(i = 0; i < arrLen; ++i)res.push(fn(arr[i], i));\n        return res;\n    }\n    function extend(a, b) {\n        for(var i in b)if (hasOwnProp(b, i)) a[i] = b[i];\n        if (hasOwnProp(b, \"toString\")) a.toString = b.toString;\n        if (hasOwnProp(b, \"valueOf\")) a.valueOf = b.valueOf;\n        return a;\n    }\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false\n        };\n    }\n    function getParsingFlags(m) {\n        if (m._pf == null) m._pf = defaultParsingFlags();\n        return m._pf;\n    }\n    var some;\n    if (Array.prototype.some) some = Array.prototype.some;\n    else some = function(fun) {\n        var t = Object(this), len = t.length >>> 0, i;\n        for(i = 0; i < len; i++){\n            if (i in t && fun.call(this, t[i], i, t)) return true;\n        }\n        return false;\n    };\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m), parsedParts = some.call(flags.parsedDateParts, function(i) {\n                return i != null;\n            }), isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n            if (m._strict) isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n            if (Object.isFrozen == null || !Object.isFrozen(m)) m._isValid = isNowValid;\n            else return isNowValid;\n        }\n        return m._isValid;\n    }\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) extend(getParsingFlags(m), flags);\n        else getParsingFlags(m).userInvalidated = true;\n        return m;\n    }\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [], updateInProgress = false;\n    function copyConfig(to, from) {\n        var i, prop, val, momentPropertiesLen = momentProperties.length;\n        if (!isUndefined(from._isAMomentObject)) to._isAMomentObject = from._isAMomentObject;\n        if (!isUndefined(from._i)) to._i = from._i;\n        if (!isUndefined(from._f)) to._f = from._f;\n        if (!isUndefined(from._l)) to._l = from._l;\n        if (!isUndefined(from._strict)) to._strict = from._strict;\n        if (!isUndefined(from._tzm)) to._tzm = from._tzm;\n        if (!isUndefined(from._isUTC)) to._isUTC = from._isUTC;\n        if (!isUndefined(from._offset)) to._offset = from._offset;\n        if (!isUndefined(from._pf)) to._pf = getParsingFlags(from);\n        if (!isUndefined(from._locale)) to._locale = from._locale;\n        if (momentPropertiesLen > 0) for(i = 0; i < momentPropertiesLen; i++){\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) to[prop] = val;\n        }\n        return to;\n    }\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) this._d = new Date(NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n    function isMoment(obj) {\n        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n    }\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false && typeof console !== \"undefined\" && console.warn) console.warn(\"Deprecation warning: \" + msg);\n    }\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function() {\n            if (hooks.deprecationHandler != null) hooks.deprecationHandler(null, msg);\n            if (firstTime) {\n                var args = [], arg, i, key, argLen = arguments.length;\n                for(i = 0; i < argLen; i++){\n                    arg = \"\";\n                    if (typeof arguments[i] === \"object\") {\n                        arg += \"\\n[\" + i + \"] \";\n                        for(key in arguments[0])if (hasOwnProp(arguments[0], key)) arg += key + \": \" + arguments[0][key] + \", \";\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else arg = arguments[i];\n                    args.push(arg);\n                }\n                warn(msg + \"\\nArguments: \" + Array.prototype.slice.call(args).join(\"\") + \"\\n\" + new Error().stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n    var deprecations = {};\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) hooks.deprecationHandler(name, msg);\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n    function isFunction(input) {\n        return typeof Function !== \"undefined\" && input instanceof Function || Object.prototype.toString.call(input) === \"[object Function]\";\n    }\n    function set(config) {\n        var prop, i;\n        for(i in config)if (hasOwnProp(config, i)) {\n            prop = config[i];\n            if (isFunction(prop)) this[i] = prop;\n            else this[\"_\" + i] = prop;\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + \"|\" + /\\d{1,2}/.source);\n    }\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for(prop in childConfig)if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) res[prop] = childConfig[prop];\n            else delete res[prop];\n        }\n        for(prop in parentConfig)if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n        return res;\n    }\n    function Locale(config) {\n        if (config != null) this.set(config);\n    }\n    var keys;\n    if (Object.keys) keys = Object.keys;\n    else keys = function(obj) {\n        var i, res = [];\n        for(i in obj)if (hasOwnProp(obj, i)) res.push(i);\n        return res;\n    };\n    var defaultCalendar = {\n        sameDay: \"[Today at] LT\",\n        nextDay: \"[Tomorrow at] LT\",\n        nextWeek: \"dddd [at] LT\",\n        lastDay: \"[Yesterday at] LT\",\n        lastWeek: \"[Last] dddd [at] LT\",\n        sameElse: \"L\"\n    };\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar[\"sameElse\"];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = \"\" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign = number >= 0;\n        return (sign ? forceSign ? \"+\" : \"\" : \"-\") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === \"string\") func = function() {\n            return this[callback]();\n        };\n        if (token) formatTokenFunctions[token] = func;\n        if (padded) formatTokenFunctions[padded[0]] = function() {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n        if (ordinal) formatTokenFunctions[ordinal] = function() {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) return input.replace(/^\\[|\\]$/g, \"\");\n        return input.replace(/\\\\/g, \"\");\n    }\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n        for(i = 0, length = array.length; i < length; i++)if (formatTokenFunctions[array[i]]) array[i] = formatTokenFunctions[array[i]];\n        else array[i] = removeFormattingTokens(array[i]);\n        return function(mom) {\n            var output = \"\", i;\n            for(i = 0; i < length; i++)output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            return output;\n        };\n    }\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) return m.localeData().invalidDate();\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n        return formatFunctions[format](m);\n    }\n    function expandFormat(format, locale) {\n        var i = 5;\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n        localFormattingTokens.lastIndex = 0;\n        while(i >= 0 && localFormattingTokens.test(format)){\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n        return format;\n    }\n    var defaultLongDateFormat = {\n        LTS: \"h:mm:ss A\",\n        LT: \"h:mm A\",\n        L: \"MM/DD/YYYY\",\n        LL: \"MMMM D, YYYY\",\n        LLL: \"MMMM D, YYYY h:mm A\",\n        LLLL: \"dddd, MMMM D, YYYY h:mm A\"\n    };\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) return format;\n        this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {\n            if (tok === \"MMMM\" || tok === \"MM\" || tok === \"DD\" || tok === \"dddd\") return tok.slice(1);\n            return tok;\n        }).join(\"\");\n        return this._longDateFormat[key];\n    }\n    var defaultInvalidDate = \"Invalid date\";\n    function invalidDate() {\n        return this._invalidDate;\n    }\n    var defaultOrdinal = \"%d\", defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n    function ordinal(number) {\n        return this._ordinal.replace(\"%d\", number);\n    }\n    var defaultRelativeTime = {\n        future: \"in %s\",\n        past: \"%s ago\",\n        s: \"a few seconds\",\n        ss: \"%d seconds\",\n        m: \"a minute\",\n        mm: \"%d minutes\",\n        h: \"an hour\",\n        hh: \"%d hours\",\n        d: \"a day\",\n        dd: \"%d days\",\n        w: \"a week\",\n        ww: \"%d weeks\",\n        M: \"a month\",\n        MM: \"%d months\",\n        y: \"a year\",\n        yy: \"%d years\"\n    };\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n    }\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? \"future\" : \"past\"];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    var aliases = {};\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + \"s\"] = aliases[shorthand] = unit;\n    }\n    function normalizeUnits(units) {\n        return typeof units === \"string\" ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {}, normalizedProp, prop;\n        for(prop in inputObject)if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) normalizedInput[normalizedProp] = inputObject[prop];\n        }\n        return normalizedInput;\n    }\n    var priorities = {};\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n    function getPrioritizedUnits(unitsObj) {\n        var units = [], u;\n        for(u in unitsObj)if (hasOwnProp(unitsObj, u)) units.push({\n            unit: u,\n            priority: priorities[u]\n        });\n        units.sort(function(a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n    function isLeapYear(year) {\n        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n    }\n    function absFloor(number) {\n        if (number < 0) // -0 -> 0\n        return Math.ceil(number) || 0;\n        else return Math.floor(number);\n    }\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion, value = 0;\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) value = absFloor(coercedNumber);\n        return value;\n    }\n    function makeGetSet(unit, keepTime) {\n        return function(value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else return get(this, unit);\n        };\n    }\n    function get(mom, unit) {\n        return mom.isValid() ? mom._d[\"get\" + (mom._isUTC ? \"UTC\" : \"\") + unit]() : NaN;\n    }\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === \"FullYear\" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                value = toInt(value);\n                mom._d[\"set\" + (mom._isUTC ? \"UTC\" : \"\") + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            } else mom._d[\"set\" + (mom._isUTC ? \"UTC\" : \"\") + unit](value);\n        }\n    }\n    // MOMENTS\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) return this[units]();\n        return this;\n    }\n    function stringSet(units, value) {\n        if (typeof units === \"object\") {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;\n            for(i = 0; i < prioritizedLen; i++)this[prioritized[i].unit](units[prioritized[i].unit]);\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) return this[units](value);\n        }\n        return this;\n    }\n    var match1 = /\\d/, match2 = /\\d\\d/, match3 = /\\d{3}/, match4 = /\\d{4}/, match6 = /[+-]?\\d{6}/, match1to2 = /\\d\\d?/, match3to4 = /\\d\\d\\d\\d?/, match5to6 = /\\d\\d\\d\\d\\d\\d?/, match1to3 = /\\d{1,3}/, match1to4 = /\\d{1,4}/, match1to6 = /[+-]?\\d{1,6}/, matchUnsigned = /\\d+/, matchSigned = /[+-]?\\d+/, matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i, regexes;\n    regexes = {};\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {\n            return isStrict && strictRegex ? strictRegex : regex;\n        };\n    }\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) return new RegExp(unescapeFormat(token));\n        return regexes[token](config._strict, config._locale);\n    }\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace(\"\\\\\", \"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function(matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n    }\n    var tokens = {};\n    function addParseToken(token, callback) {\n        var i, func = callback, tokenLen;\n        if (typeof token === \"string\") token = [\n            token\n        ];\n        if (isNumber(callback)) func = function(input, array) {\n            array[callback] = toInt(input);\n        };\n        tokenLen = token.length;\n        for(i = 0; i < tokenLen; i++)tokens[token[i]] = func;\n    }\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function(input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) tokens[token](input, config._a, config, token);\n    }\n    var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;\n    function mod(n, x) {\n        return (n % x + x) % x;\n    }\n    var indexOf;\n    if (Array.prototype.indexOf) indexOf = Array.prototype.indexOf;\n    else indexOf = function(o) {\n        // I know\n        var i;\n        for(i = 0; i < this.length; ++i){\n            if (this[i] === o) return i;\n        }\n        return -1;\n    };\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) return NaN;\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n    }\n    // FORMATTING\n    addFormatToken(\"M\", [\n        \"MM\",\n        2\n    ], \"Mo\", function() {\n        return this.month() + 1;\n    });\n    addFormatToken(\"MMM\", 0, 0, function(format) {\n        return this.localeData().monthsShort(this, format);\n    });\n    addFormatToken(\"MMMM\", 0, 0, function(format) {\n        return this.localeData().months(this, format);\n    });\n    // ALIASES\n    addUnitAlias(\"month\", \"M\");\n    // PRIORITY\n    addUnitPriority(\"month\", 8);\n    // PARSING\n    addRegexToken(\"M\", match1to2);\n    addRegexToken(\"MM\", match1to2, match2);\n    addRegexToken(\"MMM\", function(isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken(\"MMMM\", function(isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n    addParseToken([\n        \"M\",\n        \"MM\"\n    ], function(input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n    addParseToken([\n        \"MMM\",\n        \"MMMM\"\n    ], function(input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) array[MONTH] = month;\n        else getParsingFlags(config).invalidMonth = input;\n    });\n    // LOCALES\n    var defaultLocaleMonths = \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"), defaultLocaleMonthsShort = \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"), MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;\n    function localeMonths(m, format) {\n        if (!m) return isArray(this._months) ? this._months : this._months[\"standalone\"];\n        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? \"format\" : \"standalone\"][m.month()];\n    }\n    function localeMonthsShort(m, format) {\n        if (!m) return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort[\"standalone\"];\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? \"format\" : \"standalone\"][m.month()];\n    }\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for(i = 0; i < 12; ++i){\n                mom = createUTC([\n                    2000,\n                    i\n                ]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, \"\").toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, \"\").toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === \"MMM\") {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else if (format === \"MMM\") {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) return ii;\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) return ii;\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n        if (this._monthsParseExact) return handleStrictParse.call(this, monthName, format, strict);\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for(i = 0; i < 12; i++){\n            // make the regex if we don't have it already\n            mom = createUTC([\n                2000,\n                i\n            ]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\"^\" + this.months(mom, \"\").replace(\".\", \"\") + \"$\", \"i\");\n                this._shortMonthsParse[i] = new RegExp(\"^\" + this.monthsShort(mom, \"\").replace(\".\", \"\") + \"$\", \"i\");\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = \"^\" + this.months(mom, \"\") + \"|^\" + this.monthsShort(mom, \"\");\n                this._monthsParse[i] = new RegExp(regex.replace(\".\", \"\"), \"i\");\n            }\n            // test the regex\n            if (strict && format === \"MMMM\" && this._longMonthsParse[i].test(monthName)) return i;\n            else if (strict && format === \"MMM\" && this._shortMonthsParse[i].test(monthName)) return i;\n            else if (!strict && this._monthsParse[i].test(monthName)) return i;\n        }\n    }\n    // MOMENTS\n    function setMonth(mom, value) {\n        var dayOfMonth;\n        if (!mom.isValid()) // No op\n        return mom;\n        if (typeof value === \"string\") {\n            if (/^\\d+$/.test(value)) value = toInt(value);\n            else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) return mom;\n            }\n        }\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d[\"set\" + (mom._isUTC ? \"UTC\" : \"\") + \"Month\"](value, dayOfMonth);\n        return mom;\n    }\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else return get(this, \"Month\");\n    }\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, \"_monthsRegex\")) computeMonthsParse.call(this);\n            if (isStrict) return this._monthsShortStrictRegex;\n            else return this._monthsShortRegex;\n        } else {\n            if (!hasOwnProp(this, \"_monthsShortRegex\")) this._monthsShortRegex = defaultMonthsShortRegex;\n            return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, \"_monthsRegex\")) computeMonthsParse.call(this);\n            if (isStrict) return this._monthsStrictRegex;\n            else return this._monthsRegex;\n        } else {\n            if (!hasOwnProp(this, \"_monthsRegex\")) this._monthsRegex = defaultMonthsRegex;\n            return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n        var shortPieces = [], longPieces = [], mixedPieces = [], i, mom;\n        for(i = 0; i < 12; i++){\n            // make the regex if we don't have it already\n            mom = createUTC([\n                2000,\n                i\n            ]);\n            shortPieces.push(this.monthsShort(mom, \"\"));\n            longPieces.push(this.months(mom, \"\"));\n            mixedPieces.push(this.months(mom, \"\"));\n            mixedPieces.push(this.monthsShort(mom, \"\"));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for(i = 0; i < 12; i++){\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for(i = 0; i < 24; i++)mixedPieces[i] = regexEscape(mixedPieces[i]);\n        this._monthsRegex = new RegExp(\"^(\" + mixedPieces.join(\"|\") + \")\", \"i\");\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\"^(\" + longPieces.join(\"|\") + \")\", \"i\");\n        this._monthsShortStrictRegex = new RegExp(\"^(\" + shortPieces.join(\"|\") + \")\", \"i\");\n    }\n    // FORMATTING\n    addFormatToken(\"Y\", 0, 0, function() {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : \"+\" + y;\n    });\n    addFormatToken(0, [\n        \"YY\",\n        2\n    ], 0, function() {\n        return this.year() % 100;\n    });\n    addFormatToken(0, [\n        \"YYYY\",\n        4\n    ], 0, \"year\");\n    addFormatToken(0, [\n        \"YYYYY\",\n        5\n    ], 0, \"year\");\n    addFormatToken(0, [\n        \"YYYYYY\",\n        6,\n        true\n    ], 0, \"year\");\n    // ALIASES\n    addUnitAlias(\"year\", \"y\");\n    // PRIORITIES\n    addUnitPriority(\"year\", 1);\n    // PARSING\n    addRegexToken(\"Y\", matchSigned);\n    addRegexToken(\"YY\", match1to2, match2);\n    addRegexToken(\"YYYY\", match1to4, match4);\n    addRegexToken(\"YYYYY\", match1to6, match6);\n    addRegexToken(\"YYYYYY\", match1to6, match6);\n    addParseToken([\n        \"YYYYY\",\n        \"YYYYYY\"\n    ], YEAR);\n    addParseToken(\"YYYY\", function(input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken(\"YY\", function(input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken(\"Y\", function(input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n    // HELPERS\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n    // HOOKS\n    hooks.parseTwoDigitYear = function(input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n    // MOMENTS\n    var getSetYear = makeGetSet(\"FullYear\", true);\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) date.setFullYear(y);\n        } else date = new Date(y, m, d, h, M, s, ms);\n        return date;\n    }\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) date.setUTCFullYear(y);\n        } else date = new Date(Date.UTC.apply(null, arguments));\n        return date;\n    }\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var fwd = 7 + dow - doy, // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n        return -fwdlw + fwd - 1;\n    }\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n    // FORMATTING\n    addFormatToken(\"w\", [\n        \"ww\",\n        2\n    ], \"wo\", \"week\");\n    addFormatToken(\"W\", [\n        \"WW\",\n        2\n    ], \"Wo\", \"isoWeek\");\n    // ALIASES\n    addUnitAlias(\"week\", \"w\");\n    addUnitAlias(\"isoWeek\", \"W\");\n    // PRIORITIES\n    addUnitPriority(\"week\", 5);\n    addUnitPriority(\"isoWeek\", 5);\n    // PARSING\n    addRegexToken(\"w\", match1to2);\n    addRegexToken(\"ww\", match1to2, match2);\n    addRegexToken(\"W\", match1to2);\n    addRegexToken(\"WW\", match1to2, match2);\n    addWeekParseToken([\n        \"w\",\n        \"ww\",\n        \"W\",\n        \"WW\"\n    ], function(input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n    // HELPERS\n    // LOCALES\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n    var defaultLocaleWeek = {\n        dow: 0,\n        doy: 6\n    };\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n    // MOMENTS\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, \"d\");\n    }\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, \"d\");\n    }\n    // FORMATTING\n    addFormatToken(\"d\", 0, \"do\", \"day\");\n    addFormatToken(\"dd\", 0, 0, function(format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n    addFormatToken(\"ddd\", 0, 0, function(format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n    addFormatToken(\"dddd\", 0, 0, function(format) {\n        return this.localeData().weekdays(this, format);\n    });\n    addFormatToken(\"e\", 0, 0, \"weekday\");\n    addFormatToken(\"E\", 0, 0, \"isoWeekday\");\n    // ALIASES\n    addUnitAlias(\"day\", \"d\");\n    addUnitAlias(\"weekday\", \"e\");\n    addUnitAlias(\"isoWeekday\", \"E\");\n    // PRIORITY\n    addUnitPriority(\"day\", 11);\n    addUnitPriority(\"weekday\", 11);\n    addUnitPriority(\"isoWeekday\", 11);\n    // PARSING\n    addRegexToken(\"d\", match1to2);\n    addRegexToken(\"e\", match1to2);\n    addRegexToken(\"E\", match1to2);\n    addRegexToken(\"dd\", function(isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken(\"ddd\", function(isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken(\"dddd\", function(isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n    addWeekParseToken([\n        \"dd\",\n        \"ddd\",\n        \"dddd\"\n    ], function(input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) week.d = weekday;\n        else getParsingFlags(config).invalidWeekday = input;\n    });\n    addWeekParseToken([\n        \"d\",\n        \"e\",\n        \"E\"\n    ], function(input, week, config, token) {\n        week[token] = toInt(input);\n    });\n    // HELPERS\n    function parseWeekday(input, locale) {\n        if (typeof input !== \"string\") return input;\n        if (!isNaN(input)) return parseInt(input, 10);\n        input = locale.weekdaysParse(input);\n        if (typeof input === \"number\") return input;\n        return null;\n    }\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === \"string\") return locale.weekdaysParse(input) % 7 || 7;\n        return isNaN(input) ? null : input;\n    }\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n    var defaultLocaleWeekdays = \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"), defaultLocaleWeekdaysShort = \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"), defaultLocaleWeekdaysMin = \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? \"format\" : \"standalone\"];\n        return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n    }\n    function localeWeekdaysShort(m) {\n        return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n    function localeWeekdaysMin(m) {\n        return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n            for(i = 0; i < 7; ++i){\n                mom = createUTC([\n                    2000,\n                    1\n                ]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, \"\").toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, \"\").toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, \"\").toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === \"dddd\") {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === \"ddd\") {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === \"dddd\") {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === \"ddd\") {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) return ii;\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n        if (this._weekdaysParseExact) return handleStrictParse$1.call(this, weekdayName, format, strict);\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n        for(i = 0; i < 7; i++){\n            // make the regex if we don't have it already\n            mom = createUTC([\n                2000,\n                1\n            ]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\"^\" + this.weekdays(mom, \"\").replace(\".\", \"\\\\.?\") + \"$\", \"i\");\n                this._shortWeekdaysParse[i] = new RegExp(\"^\" + this.weekdaysShort(mom, \"\").replace(\".\", \"\\\\.?\") + \"$\", \"i\");\n                this._minWeekdaysParse[i] = new RegExp(\"^\" + this.weekdaysMin(mom, \"\").replace(\".\", \"\\\\.?\") + \"$\", \"i\");\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = \"^\" + this.weekdays(mom, \"\") + \"|^\" + this.weekdaysShort(mom, \"\") + \"|^\" + this.weekdaysMin(mom, \"\");\n                this._weekdaysParse[i] = new RegExp(regex.replace(\".\", \"\"), \"i\");\n            }\n            // test the regex\n            if (strict && format === \"dddd\" && this._fullWeekdaysParse[i].test(weekdayName)) return i;\n            else if (strict && format === \"ddd\" && this._shortWeekdaysParse[i].test(weekdayName)) return i;\n            else if (strict && format === \"dd\" && this._minWeekdaysParse[i].test(weekdayName)) return i;\n            else if (!strict && this._weekdaysParse[i].test(weekdayName)) return i;\n        }\n    }\n    // MOMENTS\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) return input != null ? this : NaN;\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, \"d\");\n        } else return day;\n    }\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) return input != null ? this : NaN;\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, \"d\");\n    }\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) return input != null ? this : NaN;\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else return this.day() || 7;\n    }\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, \"_weekdaysRegex\")) computeWeekdaysParse.call(this);\n            if (isStrict) return this._weekdaysStrictRegex;\n            else return this._weekdaysRegex;\n        } else {\n            if (!hasOwnProp(this, \"_weekdaysRegex\")) this._weekdaysRegex = defaultWeekdaysRegex;\n            return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, \"_weekdaysRegex\")) computeWeekdaysParse.call(this);\n            if (isStrict) return this._weekdaysShortStrictRegex;\n            else return this._weekdaysShortRegex;\n        } else {\n            if (!hasOwnProp(this, \"_weekdaysShortRegex\")) this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, \"_weekdaysRegex\")) computeWeekdaysParse.call(this);\n            if (isStrict) return this._weekdaysMinStrictRegex;\n            else return this._weekdaysMinRegex;\n        } else {\n            if (!hasOwnProp(this, \"_weekdaysMinRegex\")) this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;\n        for(i = 0; i < 7; i++){\n            // make the regex if we don't have it already\n            mom = createUTC([\n                2000,\n                1\n            ]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, \"\"));\n            shortp = regexEscape(this.weekdaysShort(mom, \"\"));\n            longp = regexEscape(this.weekdays(mom, \"\"));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        this._weekdaysRegex = new RegExp(\"^(\" + mixedPieces.join(\"|\") + \")\", \"i\");\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n        this._weekdaysStrictRegex = new RegExp(\"^(\" + longPieces.join(\"|\") + \")\", \"i\");\n        this._weekdaysShortStrictRegex = new RegExp(\"^(\" + shortPieces.join(\"|\") + \")\", \"i\");\n        this._weekdaysMinStrictRegex = new RegExp(\"^(\" + minPieces.join(\"|\") + \")\", \"i\");\n    }\n    // FORMATTING\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n    function kFormat() {\n        return this.hours() || 24;\n    }\n    addFormatToken(\"H\", [\n        \"HH\",\n        2\n    ], 0, \"hour\");\n    addFormatToken(\"h\", [\n        \"hh\",\n        2\n    ], 0, hFormat);\n    addFormatToken(\"k\", [\n        \"kk\",\n        2\n    ], 0, kFormat);\n    addFormatToken(\"hmm\", 0, 0, function() {\n        return \"\" + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n    addFormatToken(\"hmmss\", 0, 0, function() {\n        return \"\" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n    });\n    addFormatToken(\"Hmm\", 0, 0, function() {\n        return \"\" + this.hours() + zeroFill(this.minutes(), 2);\n    });\n    addFormatToken(\"Hmmss\", 0, 0, function() {\n        return \"\" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n    });\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function() {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n    meridiem(\"a\", true);\n    meridiem(\"A\", false);\n    // ALIASES\n    addUnitAlias(\"hour\", \"h\");\n    // PRIORITY\n    addUnitPriority(\"hour\", 13);\n    // PARSING\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n    addRegexToken(\"a\", matchMeridiem);\n    addRegexToken(\"A\", matchMeridiem);\n    addRegexToken(\"H\", match1to2);\n    addRegexToken(\"h\", match1to2);\n    addRegexToken(\"k\", match1to2);\n    addRegexToken(\"HH\", match1to2, match2);\n    addRegexToken(\"hh\", match1to2, match2);\n    addRegexToken(\"kk\", match1to2, match2);\n    addRegexToken(\"hmm\", match3to4);\n    addRegexToken(\"hmmss\", match5to6);\n    addRegexToken(\"Hmm\", match3to4);\n    addRegexToken(\"Hmmss\", match5to6);\n    addParseToken([\n        \"H\",\n        \"HH\"\n    ], HOUR);\n    addParseToken([\n        \"k\",\n        \"kk\"\n    ], function(input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken([\n        \"a\",\n        \"A\"\n    ], function(input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken([\n        \"h\",\n        \"hh\"\n    ], function(input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken(\"hmm\", function(input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken(\"hmmss\", function(input, array, config) {\n        var pos1 = input.length - 4, pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken(\"Hmm\", function(input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken(\"Hmmss\", function(input, array, config) {\n        var pos1 = input.length - 4, pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n    // LOCALES\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + \"\").toLowerCase().charAt(0) === \"p\";\n    }\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i, // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    getSetHour = makeGetSet(\"Hours\", true);\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) return isLower ? \"pm\" : \"PM\";\n        else return isLower ? \"am\" : \"AM\";\n    }\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n        week: defaultLocaleWeek,\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n    // internal storage for locale config files\n    var locales = {}, localeFamilies = {}, globalLocale;\n    function commonPrefix(arr1, arr2) {\n        var i, minl = Math.min(arr1.length, arr2.length);\n        for(i = 0; i < minl; i += 1){\n            if (arr1[i] !== arr2[i]) return i;\n        }\n        return minl;\n    }\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace(\"_\", \"-\") : key;\n    }\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n        while(i < names.length){\n            split = normalizeLocale(names[i]).split(\"-\");\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split(\"-\") : null;\n            while(j > 0){\n                locale = loadLocale(split.slice(0, j).join(\"-\"));\n                if (locale) return locale;\n                if (next && next.length >= j && commonPrefix(split, next) >= j - 1) break;\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match(\"^[^/\\\\\\\\]*$\") != null;\n    }\n    function loadLocale(name) {\n        var oldLocale = null, aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (locales[name] === undefined && true && module && module.exports && isLocaleNameSane(name)) try {\n            oldLocale = globalLocale._abbr;\n            aliasedRequire = undefined;\n            aliasedRequire(\"./locale/\" + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {\n            // mark as not found to avoid repeating expensive file require call causing high CPU\n            // when trying to find en-US, en_US, en-us for every format call\n            locales[name] = null; // null means not found\n        }\n        return locales[name];\n    }\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) data = getLocale(key);\n            else data = defineLocale(key, values);\n            if (data) // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n            else if (typeof console !== \"undefined\" && console.warn) //warn user if arguments are passed but the locale could not be set\n            console.warn(\"Locale \" + key + \" not found. Did you forget to load it?\");\n        }\n        return globalLocale._abbr;\n    }\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\"defineLocaleOverride\", \"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\");\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) parentConfig = locales[config.parentLocale]._config;\n                else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) parentConfig = locale._config;\n                    else {\n                        if (!localeFamilies[config.parentLocale]) localeFamilies[config.parentLocale] = [];\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n            if (localeFamilies[name]) localeFamilies[name].forEach(function(x) {\n                defineLocale(x.name, x.config);\n            });\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            if (locales[name] != null && locales[name].parentLocale != null) // Update existing child locale in-place to avoid memory-leaks\n            locales[name].set(mergeConfigs(locales[name]._config, config));\n            else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) parentConfig = tmpLocale._config;\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) // updateLocale is called for creating a new locale\n                // Set abbr so it will have a name (getters return\n                // undefined otherwise).\n                config.abbr = name;\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n                if (name === getSetGlobalLocale()) getSetGlobalLocale(name);\n            } else if (locales[name] != null) delete locales[name];\n        }\n        return locales[name];\n    }\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n        if (key && key._locale && key._locale._abbr) key = key._locale._abbr;\n        if (!key) return globalLocale;\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) return locale;\n            key = [\n                key\n            ];\n        }\n        return chooseLocale(key);\n    }\n    function listLocales() {\n        return keys(locales);\n    }\n    function checkOverflow(m) {\n        var overflow, a = m._a;\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) overflow = DATE;\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) overflow = WEEK;\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) overflow = WEEKDAY;\n            getParsingFlags(m).overflow = overflow;\n        }\n        return m;\n    }\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/, basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/, tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/, isoDates = [\n        [\n            \"YYYYYY-MM-DD\",\n            /[+-]\\d{6}-\\d\\d-\\d\\d/\n        ],\n        [\n            \"YYYY-MM-DD\",\n            /\\d{4}-\\d\\d-\\d\\d/\n        ],\n        [\n            \"GGGG-[W]WW-E\",\n            /\\d{4}-W\\d\\d-\\d/\n        ],\n        [\n            \"GGGG-[W]WW\",\n            /\\d{4}-W\\d\\d/,\n            false\n        ],\n        [\n            \"YYYY-DDD\",\n            /\\d{4}-\\d{3}/\n        ],\n        [\n            \"YYYY-MM\",\n            /\\d{4}-\\d\\d/,\n            false\n        ],\n        [\n            \"YYYYYYMMDD\",\n            /[+-]\\d{10}/\n        ],\n        [\n            \"YYYYMMDD\",\n            /\\d{8}/\n        ],\n        [\n            \"GGGG[W]WWE\",\n            /\\d{4}W\\d{3}/\n        ],\n        [\n            \"GGGG[W]WW\",\n            /\\d{4}W\\d{2}/,\n            false\n        ],\n        [\n            \"YYYYDDD\",\n            /\\d{7}/\n        ],\n        [\n            \"YYYYMM\",\n            /\\d{6}/,\n            false\n        ],\n        [\n            \"YYYY\",\n            /\\d{4}/,\n            false\n        ]\n    ], // iso time formats and regexes\n    isoTimes = [\n        [\n            \"HH:mm:ss.SSSS\",\n            /\\d\\d:\\d\\d:\\d\\d\\.\\d+/\n        ],\n        [\n            \"HH:mm:ss,SSSS\",\n            /\\d\\d:\\d\\d:\\d\\d,\\d+/\n        ],\n        [\n            \"HH:mm:ss\",\n            /\\d\\d:\\d\\d:\\d\\d/\n        ],\n        [\n            \"HH:mm\",\n            /\\d\\d:\\d\\d/\n        ],\n        [\n            \"HHmmss.SSSS\",\n            /\\d\\d\\d\\d\\d\\d\\.\\d+/\n        ],\n        [\n            \"HHmmss,SSSS\",\n            /\\d\\d\\d\\d\\d\\d,\\d+/\n        ],\n        [\n            \"HHmmss\",\n            /\\d\\d\\d\\d\\d\\d/\n        ],\n        [\n            \"HHmm\",\n            /\\d\\d\\d\\d/\n        ],\n        [\n            \"HH\",\n            /\\d\\d/\n        ]\n    ], aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i, // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/, obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -240,\n        EST: -300,\n        CDT: -300,\n        CST: -360,\n        MDT: -360,\n        MST: -420,\n        PDT: -420,\n        PST: -480\n    };\n    // date from iso format\n    function configFromISO(config) {\n        var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for(i = 0, l = isoDatesLen; i < l; i++)if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for(i = 0, l = isoTimesLen; i < l; i++)if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || \" \") + isoTimes[i][0];\n                    break;\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) tzFormat = \"Z\";\n                else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || \"\") + (tzFormat || \"\");\n            configFromStringAndFormat(config);\n        } else config._isValid = false;\n    }\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n        if (secondStr) result.push(parseInt(secondStr, 10));\n        return result;\n    }\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) return 2000 + year;\n        else if (year <= 999) return 1900 + year;\n        return year;\n    }\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^()]*\\)|[\\n\\t]/g, \" \").replace(/(\\s\\s+)/g, \" \").replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\");\n    }\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) return obsOffsets[obsOffset];\n        else if (militaryOffset) // the only allowed military tz is Z\n        return 0;\n        else {\n            var hm = parseInt(numOffset, 10), m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) return;\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n            getParsingFlags(config).rfc2822 = true;\n        } else config._isValid = false;\n    }\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n        configFromISO(config);\n        if (config._isValid === false) delete config._isValid;\n        else return;\n        configFromRFC2822(config);\n        if (config._isValid === false) delete config._isValid;\n        else return;\n        if (config._strict) config._isValid = false;\n        else // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n    hooks.createFromInputFallback = deprecate(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\", function(config) {\n        config._d = new Date(config._i + (config._useUTC ? \" UTC\" : \"\"));\n    });\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) return a;\n        if (b != null) return b;\n        return c;\n    }\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) return [\n            nowValue.getUTCFullYear(),\n            nowValue.getUTCMonth(),\n            nowValue.getUTCDate()\n        ];\n        return [\n            nowValue.getFullYear(),\n            nowValue.getMonth(),\n            nowValue.getDate()\n        ];\n    }\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n        if (config._d) return;\n        currentDate = currentDateArray(config);\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) dayOfYearFromWeekInfo(config);\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) getParsingFlags(config)._overflowDayOfYear = true;\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for(i = 0; i < 3 && config._a[i] == null; ++i)config._a[i] = input[i] = currentDate[i];\n        // Zero out whatever was not defaulted, including time\n        for(; i < 7; i++)config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        if (config._nextDay) config._a[HOUR] = 24;\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== \"undefined\" && config._w.d !== expectedWeekday) getParsingFlags(config).weekdayMismatch = true;\n    }\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) weekdayOverflow = true;\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n            curWeek = weekOfYear(createLocal(), dow, doy);\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) weekdayOverflow = true;\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) weekdayOverflow = true;\n            } else // default to beginning of week\n            weekday = dow;\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) getParsingFlags(config)._overflowWeeks = true;\n        else if (weekdayOverflow != null) getParsingFlags(config)._overflowWeekday = true;\n        else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function() {};\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function() {};\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = \"\" + config._i, i, parsedInput, tokens, token, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for(i = 0; i < tokenLen; i++){\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) getParsingFlags(config).unusedInput.push(skipped);\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) getParsingFlags(config).empty = false;\n                else getParsingFlags(config).unusedTokens.push(token);\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) getParsingFlags(config).unusedTokens.push(token);\n        }\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) getParsingFlags(config).unusedInput.push(string);\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) getParsingFlags(config).bigHour = undefined;\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        configFromArray(config);\n        checkOverflow(config);\n    }\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n        if (meridiem == null) // nothing to do\n        return hour;\n        if (locale.meridiemHour != null) return locale.meridiemHour(hour, meridiem);\n        else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) hour += 12;\n            if (!isPm && hour === 12) hour = 0;\n            return hour;\n        } else // this is not supposed to happen\n        return hour;\n    }\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n        for(i = 0; i < configfLen; i++){\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) tempConfig._useUTC = config._useUTC;\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n            if (isValid(tempConfig)) validFormatFound = true;\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n            getParsingFlags(tempConfig).score = currentScore;\n            if (!bestFormatIsValid) {\n                if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) bestFormatIsValid = true;\n                }\n            } else if (currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n        extend(config, bestMoment || tempConfig);\n    }\n    function configFromObject(config) {\n        if (config._d) return;\n        var i = normalizeObjectUnits(config._i), dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map([\n            i.year,\n            i.month,\n            dayOrDate,\n            i.hour,\n            i.minute,\n            i.second,\n            i.millisecond\n        ], function(obj) {\n            return obj && parseInt(obj, 10);\n        });\n        configFromArray(config);\n    }\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, \"d\");\n            res._nextDay = undefined;\n        }\n        return res;\n    }\n    function prepareConfig(config) {\n        var input = config._i, format = config._f;\n        config._locale = config._locale || getLocale(config._l);\n        if (input === null || format === undefined && input === \"\") return createInvalid({\n            nullInput: true\n        });\n        if (typeof input === \"string\") config._i = input = config._locale.preparse(input);\n        if (isMoment(input)) return new Moment(checkOverflow(input));\n        else if (isDate(input)) config._d = input;\n        else if (isArray(format)) configFromStringAndArray(config);\n        else if (format) configFromStringAndFormat(config);\n        else configFromInput(config);\n        if (!isValid(config)) config._d = null;\n        return config;\n    }\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) config._d = new Date(hooks.now());\n        else if (isDate(input)) config._d = new Date(input.valueOf());\n        else if (typeof input === \"string\") configFromString(config);\n        else if (isArray(input)) {\n            config._a = map(input.slice(0), function(obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) configFromObject(config);\n        else if (isNumber(input)) // from milliseconds\n        config._d = new Date(input);\n        else hooks.createFromInputFallback(config);\n    }\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) input = undefined;\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        return createFromConfig(c);\n    }\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n    var prototypeMin = deprecate(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\", function() {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) return other < this ? this : other;\n        else return createInvalid();\n    }), prototypeMax = deprecate(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\", function() {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) return other > this ? this : other;\n        else return createInvalid();\n    });\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) moments = moments[0];\n        if (!moments.length) return createLocal();\n        res = moments[0];\n        for(i = 1; i < moments.length; ++i)if (!moments[i].isValid() || moments[i][fn](res)) res = moments[i];\n        return res;\n    }\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n        return pickBy(\"isBefore\", args);\n    }\n    function max() {\n        var args = [].slice.call(arguments, 0);\n        return pickBy(\"isAfter\", args);\n    }\n    var now = function() {\n        return Date.now ? Date.now() : +new Date();\n    };\n    var ordering = [\n        \"year\",\n        \"quarter\",\n        \"month\",\n        \"week\",\n        \"day\",\n        \"hour\",\n        \"minute\",\n        \"second\",\n        \"millisecond\"\n    ];\n    function isDurationValid(m) {\n        var key, unitHasDecimal = false, i, orderLen = ordering.length;\n        for(key in m){\n            if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) return false;\n        }\n        for(i = 0; i < orderLen; ++i)if (m[ordering[i]]) {\n            if (unitHasDecimal) return false; // only allow non-integers for smallest unit\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) unitHasDecimal = true;\n        }\n        return true;\n    }\n    function isValid$1() {\n        return this._isValid;\n    }\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration), years = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months = normalizedInput.month || 0, weeks = normalizedInput.week || normalizedInput.isoWeek || 0, days = normalizedInput.day || 0, hours = normalizedInput.hour || 0, minutes = normalizedInput.minute || 0, seconds = normalizedInput.second || 0, milliseconds = normalizedInput.millisecond || 0;\n        this._isValid = isDurationValid(normalizedInput);\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 3600000; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n        this._data = {};\n        this._locale = getLocale();\n        this._bubble();\n    }\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n    function absRound(number) {\n        if (number < 0) return Math.round(-1 * number) * -1;\n        else return Math.round(number);\n    }\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;\n        for(i = 0; i < len; i++)if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) diffs++;\n        return diffs + lengthDiff;\n    }\n    // FORMATTING\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function() {\n            var offset = this.utcOffset(), sign = \"+\";\n            if (offset < 0) {\n                offset = -offset;\n                sign = \"-\";\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n        });\n    }\n    offset(\"Z\", \":\");\n    offset(\"ZZ\", \"\");\n    // PARSING\n    addRegexToken(\"Z\", matchShortOffset);\n    addRegexToken(\"ZZ\", matchShortOffset);\n    addParseToken([\n        \"Z\",\n        \"ZZ\"\n    ], function(input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n    // HELPERS\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n    function offsetFromString(matcher, string) {\n        var matches = (string || \"\").match(matcher), chunk, parts, minutes;\n        if (matches === null) return null;\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + \"\").match(chunkOffset) || [\n            \"-\",\n            0,\n            0\n        ];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n        return minutes === 0 ? 0 : parts[0] === \"+\" ? minutes : -minutes;\n    }\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else return createLocal(input).local();\n    }\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n    // HOOKS\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function() {};\n    // MOMENTS\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0, localAdjust;\n        if (!this.isValid()) return input != null ? this : NaN;\n        if (input != null) {\n            if (typeof input === \"string\") {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) return this;\n            } else if (Math.abs(input) < 16 && !keepMinutes) input = input * 60;\n            if (!this._isUTC && keepLocalTime) localAdjust = getDateOffset(this);\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) this.add(localAdjust, \"m\");\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) addSubtract(this, createDuration(input - offset, \"m\"), 1, false);\n                else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else return this._isUTC ? offset : getDateOffset(this);\n    }\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== \"string\") input = -input;\n            this.utcOffset(input, keepLocalTime);\n            return this;\n        } else return -this.utcOffset();\n    }\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n            if (keepLocalTime) this.subtract(getDateOffset(this), \"m\");\n        }\n        return this;\n    }\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) this.utcOffset(this._tzm, false, true);\n        else if (typeof this._i === \"string\") {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) this.utcOffset(tZone);\n            else this.utcOffset(0, true);\n        }\n        return this;\n    }\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) return false;\n        input = input ? createLocal(input).utcOffset() : 0;\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n    function isDaylightSavingTime() {\n        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n    }\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) return this._isDSTShifted;\n        var c = {}, other;\n        copyConfig(c, this);\n        c = prepareConfig(c);\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else this._isDSTShifted = false;\n        return this._isDSTShifted;\n    }\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/, // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n    function createDuration(input, key) {\n        var duration = input, // matching against regexp is expensive, do it on demand\n        match = null, sign, ret, diffRes;\n        if (isDuration(input)) duration = {\n            ms: input._milliseconds,\n            d: input._days,\n            M: input._months\n        };\n        else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) duration[key] = +input;\n            else duration.milliseconds = +input;\n        } else if (match = aspNetRegex.exec(input)) {\n            sign = match[1] === \"-\" ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign\n            };\n        } else if (match = isoRegex.exec(input)) {\n            sign = match[1] === \"-\" ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign)\n            };\n        } else if (duration == null) // checks for null or undefined\n        duration = {};\n        else if (typeof duration === \"object\" && (\"from\" in duration || \"to\" in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n        ret = new Duration(duration);\n        if (isDuration(input) && hasOwnProp(input, \"_locale\")) ret._locale = input._locale;\n        if (isDuration(input) && hasOwnProp(input, \"_isValid\")) ret._isValid = input._isValid;\n        return ret;\n    }\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(\",\", \".\"));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, \"M\").isAfter(other)) --res.months;\n        res.milliseconds = +other - +base.clone().add(res.months, \"M\");\n        return res;\n    }\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) return {\n            milliseconds: 0,\n            months: 0\n        };\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) res = positiveMomentsDifference(base, other);\n        else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n        return res;\n    }\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function(val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, \"moment().\" + name + \"(period, number) is deprecated. Please use moment().\" + name + \"(number, period). \" + \"See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\");\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds, days = absRound(duration._days), months = absRound(duration._months);\n        if (!mom.isValid()) // No op\n        return;\n        updateOffset = updateOffset == null ? true : updateOffset;\n        if (months) setMonth(mom, get(mom, \"Month\") + months * isAdding);\n        if (days) set$1(mom, \"Date\", get(mom, \"Date\") + days * isAdding);\n        if (milliseconds) mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        if (updateOffset) hooks.updateOffset(mom, days || months);\n    }\n    var add = createAdder(1, \"add\"), subtract = createAdder(-1, \"subtract\");\n    function isString(input) {\n        return typeof input === \"string\" || input instanceof String;\n    }\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n    }\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [\n            \"years\",\n            \"year\",\n            \"y\",\n            \"months\",\n            \"month\",\n            \"M\",\n            \"days\",\n            \"day\",\n            \"d\",\n            \"dates\",\n            \"date\",\n            \"D\",\n            \"hours\",\n            \"hour\",\n            \"h\",\n            \"minutes\",\n            \"minute\",\n            \"m\",\n            \"seconds\",\n            \"second\",\n            \"s\",\n            \"milliseconds\",\n            \"millisecond\",\n            \"ms\"\n        ], i, property, propertyLen = properties.length;\n        for(i = 0; i < propertyLen; i += 1){\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n        return objectTest && propertyTest;\n    }\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input), dataTypeTest = false;\n        if (arrayTest) dataTypeTest = input.filter(function(item) {\n            return !isNumber(item) && isString(input);\n        }).length === 0;\n        return arrayTest && dataTypeTest;\n    }\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [\n            \"sameDay\",\n            \"nextDay\",\n            \"lastDay\",\n            \"nextWeek\",\n            \"lastWeek\",\n            \"sameElse\"\n        ], i, property;\n        for(i = 0; i < properties.length; i += 1){\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n        return objectTest && propertyTest;\n    }\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, \"days\", true);\n        return diff < -6 ? \"sameElse\" : diff < -1 ? \"lastWeek\" : diff < 0 ? \"lastDay\" : diff < 1 ? \"sameDay\" : diff < 2 ? \"nextDay\" : diff < 7 ? \"nextWeek\" : \"sameElse\";\n    }\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(), sod = cloneWithOffset(now, this).startOf(\"day\"), format = hooks.calendarFormat(this, sod) || \"sameElse\", output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n    function clone() {\n        return new Moment(this);\n    }\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) return false;\n        units = normalizeUnits(units) || \"millisecond\";\n        if (units === \"millisecond\") return this.valueOf() > localInput.valueOf();\n        else return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) return false;\n        units = normalizeUnits(units) || \"millisecond\";\n        if (units === \"millisecond\") return this.valueOf() < localInput.valueOf();\n        else return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from), localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) return false;\n        inclusivity = inclusivity || \"()\";\n        return (inclusivity[0] === \"(\" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === \")\" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input), inputMs;\n        if (!(this.isValid() && localInput.isValid())) return false;\n        units = normalizeUnits(units) || \"millisecond\";\n        if (units === \"millisecond\") return this.valueOf() === localInput.valueOf();\n        else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n        if (!this.isValid()) return NaN;\n        that = cloneWithOffset(input, this);\n        if (!that.isValid()) return NaN;\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n        units = normalizeUnits(units);\n        switch(units){\n            case \"year\":\n                output = monthDiff(this, that) / 12;\n                break;\n            case \"month\":\n                output = monthDiff(this, that);\n                break;\n            case \"quarter\":\n                output = monthDiff(this, that) / 3;\n                break;\n            case \"second\":\n                output = (this - that) / 1e3;\n                break; // 1000\n            case \"minute\":\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case \"hour\":\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case \"day\":\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case \"week\":\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) // end-of-month calculations work correct when the start month has more\n        // days than the end month.\n        return -monthDiff(b, a);\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, \"months\"), anchor2, adjust;\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, \"months\");\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, \"months\");\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n    hooks.defaultFormat = \"YYYY-MM-DDTHH:mm:ssZ\";\n    hooks.defaultFormatUtc = \"YYYY-MM-DDTHH:mm:ss[Z]\";\n    function toString() {\n        return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n    }\n    function toISOString(keepOffset) {\n        if (!this.isValid()) return null;\n        var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) return formatMoment(m, utc ? \"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\" : \"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ\");\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) return this.toDate().toISOString();\n            else return new Date(this.valueOf() + this.utcOffset() * 60000).toISOString().replace(\"Z\", formatMoment(m, \"Z\"));\n        }\n        return formatMoment(m, utc ? \"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\" : \"YYYY-MM-DD[T]HH:mm:ss.SSSZ\");\n    }\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */ function inspect() {\n        if (!this.isValid()) return \"moment.invalid(/* \" + this._i + \" */)\";\n        var func = \"moment\", zone = \"\", prefix, year, datetime, suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? \"moment.utc\" : \"moment.parseZone\";\n            zone = \"Z\";\n        }\n        prefix = \"[\" + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? \"YYYY\" : \"YYYYYY\";\n        datetime = \"-MM-DD[T]HH:mm:ss.SSS\";\n        suffix = zone + '[\")]';\n        return this.format(prefix + year + datetime + suffix);\n    }\n    function format(inputString) {\n        if (!inputString) inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n    function from(time, withoutSuffix) {\n        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) return createDuration({\n            to: this,\n            from: time\n        }).locale(this.locale()).humanize(!withoutSuffix);\n        else return this.localeData().invalidDate();\n    }\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n    function to(time, withoutSuffix) {\n        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) return createDuration({\n            from: this,\n            to: time\n        }).locale(this.locale()).humanize(!withoutSuffix);\n        else return this.localeData().invalidDate();\n    }\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n        if (key === undefined) return this._locale._abbr;\n        else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) this._locale = newLocaleData;\n            return this;\n        }\n    }\n    var lang = deprecate(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\", function(key) {\n        if (key === undefined) return this.localeData();\n        else return this.locale(key);\n    });\n    function localeData() {\n        return this._locale;\n    }\n    var MS_PER_SECOND = 1000, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = 3506328 * MS_PER_HOUR;\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) // preserve leap years using a full 400 year cycle, then reset\n        return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        else return new Date(y, m, d).valueOf();\n    }\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) // preserve leap years using a full 400 year cycle, then reset\n        return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        else return Date.UTC(y, m, d);\n    }\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === \"millisecond\" || !this.isValid()) return this;\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n        switch(units){\n            case \"year\":\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case \"quarter\":\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case \"month\":\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case \"week\":\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case \"isoWeek\":\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case \"day\":\n            case \"date\":\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case \"hour\":\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case \"minute\":\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case \"second\":\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === \"millisecond\" || !this.isValid()) return this;\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n        switch(units){\n            case \"year\":\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case \"quarter\":\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case \"month\":\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case \"week\":\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case \"isoWeek\":\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case \"day\":\n            case \"date\":\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case \"hour\":\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case \"minute\":\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case \"second\":\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond()\n        ];\n    }\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n    function isValid$2() {\n        return isValid(this);\n    }\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n    addFormatToken(\"N\", 0, 0, \"eraAbbr\");\n    addFormatToken(\"NN\", 0, 0, \"eraAbbr\");\n    addFormatToken(\"NNN\", 0, 0, \"eraAbbr\");\n    addFormatToken(\"NNNN\", 0, 0, \"eraName\");\n    addFormatToken(\"NNNNN\", 0, 0, \"eraNarrow\");\n    addFormatToken(\"y\", [\n        \"y\",\n        1\n    ], \"yo\", \"eraYear\");\n    addFormatToken(\"y\", [\n        \"yy\",\n        2\n    ], 0, \"eraYear\");\n    addFormatToken(\"y\", [\n        \"yyy\",\n        3\n    ], 0, \"eraYear\");\n    addFormatToken(\"y\", [\n        \"yyyy\",\n        4\n    ], 0, \"eraYear\");\n    addRegexToken(\"N\", matchEraAbbr);\n    addRegexToken(\"NN\", matchEraAbbr);\n    addRegexToken(\"NNN\", matchEraAbbr);\n    addRegexToken(\"NNNN\", matchEraName);\n    addRegexToken(\"NNNNN\", matchEraNarrow);\n    addParseToken([\n        \"N\",\n        \"NN\",\n        \"NNN\",\n        \"NNNN\",\n        \"NNNNN\"\n    ], function(input, array, config, token) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) getParsingFlags(config).era = era;\n        else getParsingFlags(config).invalidEra = input;\n    });\n    addRegexToken(\"y\", matchUnsigned);\n    addRegexToken(\"yy\", matchUnsigned);\n    addRegexToken(\"yyy\", matchUnsigned);\n    addRegexToken(\"yyyy\", matchUnsigned);\n    addRegexToken(\"yo\", matchEraYearOrdinal);\n    addParseToken([\n        \"y\",\n        \"yy\",\n        \"yyy\",\n        \"yyyy\"\n    ], YEAR);\n    addParseToken([\n        \"yo\"\n    ], function(input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) match = input.match(config._locale._eraYearOrdinalRegex);\n        if (config._locale.eraYearOrdinalParse) array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        else array[YEAR] = parseInt(input, 10);\n    });\n    function localeEras(m, format) {\n        var i, l, date, eras = this._eras || getLocale(\"en\")._eras;\n        for(i = 0, l = eras.length; i < l; ++i){\n            switch(typeof eras[i].since){\n                case \"string\":\n                    // truncate time\n                    date = hooks(eras[i].since).startOf(\"day\");\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n            switch(typeof eras[i].until){\n                case \"undefined\":\n                    eras[i].until = Infinity;\n                    break;\n                case \"string\":\n                    // truncate time\n                    date = hooks(eras[i].until).startOf(\"day\").valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n    function localeErasParse(eraName, format, strict) {\n        var i, l, eras = this.eras(), name, abbr, narrow;\n        eraName = eraName.toUpperCase();\n        for(i = 0, l = eras.length; i < l; ++i){\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n            if (strict) switch(format){\n                case \"N\":\n                case \"NN\":\n                case \"NNN\":\n                    if (abbr === eraName) return eras[i];\n                    break;\n                case \"NNNN\":\n                    if (name === eraName) return eras[i];\n                    break;\n                case \"NNNNN\":\n                    if (narrow === eraName) return eras[i];\n                    break;\n            }\n            else if ([\n                name,\n                abbr,\n                narrow\n            ].indexOf(eraName) >= 0) return eras[i];\n        }\n    }\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? 1 : -1;\n        if (year === undefined) return hooks(era.since).year();\n        else return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n    function getEraName() {\n        var i, l, val, eras = this.localeData().eras();\n        for(i = 0, l = eras.length; i < l; ++i){\n            // truncate time\n            val = this.clone().startOf(\"day\").valueOf();\n            if (eras[i].since <= val && val <= eras[i].until) return eras[i].name;\n            if (eras[i].until <= val && val <= eras[i].since) return eras[i].name;\n        }\n        return \"\";\n    }\n    function getEraNarrow() {\n        var i, l, val, eras = this.localeData().eras();\n        for(i = 0, l = eras.length; i < l; ++i){\n            // truncate time\n            val = this.clone().startOf(\"day\").valueOf();\n            if (eras[i].since <= val && val <= eras[i].until) return eras[i].narrow;\n            if (eras[i].until <= val && val <= eras[i].since) return eras[i].narrow;\n        }\n        return \"\";\n    }\n    function getEraAbbr() {\n        var i, l, val, eras = this.localeData().eras();\n        for(i = 0, l = eras.length; i < l; ++i){\n            // truncate time\n            val = this.clone().startOf(\"day\").valueOf();\n            if (eras[i].since <= val && val <= eras[i].until) return eras[i].abbr;\n            if (eras[i].until <= val && val <= eras[i].since) return eras[i].abbr;\n        }\n        return \"\";\n    }\n    function getEraYear() {\n        var i, l, dir, val, eras = this.localeData().eras();\n        for(i = 0, l = eras.length; i < l; ++i){\n            dir = eras[i].since <= eras[i].until ? 1 : -1;\n            // truncate time\n            val = this.clone().startOf(\"day\").valueOf();\n            if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n        }\n        return this.year();\n    }\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, \"_erasNameRegex\")) computeErasParse.call(this);\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, \"_erasAbbrRegex\")) computeErasParse.call(this);\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, \"_erasNarrowRegex\")) computeErasParse.call(this);\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n    function computeErasParse() {\n        var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, eras = this.eras();\n        for(i = 0, l = eras.length; i < l; ++i){\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n        this._erasRegex = new RegExp(\"^(\" + mixedPieces.join(\"|\") + \")\", \"i\");\n        this._erasNameRegex = new RegExp(\"^(\" + namePieces.join(\"|\") + \")\", \"i\");\n        this._erasAbbrRegex = new RegExp(\"^(\" + abbrPieces.join(\"|\") + \")\", \"i\");\n        this._erasNarrowRegex = new RegExp(\"^(\" + narrowPieces.join(\"|\") + \")\", \"i\");\n    }\n    // FORMATTING\n    addFormatToken(0, [\n        \"gg\",\n        2\n    ], 0, function() {\n        return this.weekYear() % 100;\n    });\n    addFormatToken(0, [\n        \"GG\",\n        2\n    ], 0, function() {\n        return this.isoWeekYear() % 100;\n    });\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [\n            token,\n            token.length\n        ], 0, getter);\n    }\n    addWeekYearFormatToken(\"gggg\", \"weekYear\");\n    addWeekYearFormatToken(\"ggggg\", \"weekYear\");\n    addWeekYearFormatToken(\"GGGG\", \"isoWeekYear\");\n    addWeekYearFormatToken(\"GGGGG\", \"isoWeekYear\");\n    // ALIASES\n    addUnitAlias(\"weekYear\", \"gg\");\n    addUnitAlias(\"isoWeekYear\", \"GG\");\n    // PRIORITY\n    addUnitPriority(\"weekYear\", 1);\n    addUnitPriority(\"isoWeekYear\", 1);\n    // PARSING\n    addRegexToken(\"G\", matchSigned);\n    addRegexToken(\"g\", matchSigned);\n    addRegexToken(\"GG\", match1to2, match2);\n    addRegexToken(\"gg\", match1to2, match2);\n    addRegexToken(\"GGGG\", match1to4, match4);\n    addRegexToken(\"gggg\", match1to4, match4);\n    addRegexToken(\"GGGGG\", match1to6, match6);\n    addRegexToken(\"ggggg\", match1to6, match6);\n    addWeekParseToken([\n        \"gggg\",\n        \"ggggg\",\n        \"GGGG\",\n        \"GGGGG\"\n    ], function(input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n    addWeekParseToken([\n        \"gg\",\n        \"GG\"\n    ], function(input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n    // MOMENTS\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n    }\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) return weekOfYear(this, dow, doy).year;\n        else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) week = weeksTarget;\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n    // FORMATTING\n    addFormatToken(\"Q\", 0, \"Qo\", \"quarter\");\n    // ALIASES\n    addUnitAlias(\"quarter\", \"Q\");\n    // PRIORITY\n    addUnitPriority(\"quarter\", 7);\n    // PARSING\n    addRegexToken(\"Q\", match1);\n    addParseToken(\"Q\", function(input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n    // MOMENTS\n    function getSetQuarter(input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n    // FORMATTING\n    addFormatToken(\"D\", [\n        \"DD\",\n        2\n    ], \"Do\", \"date\");\n    // ALIASES\n    addUnitAlias(\"date\", \"D\");\n    // PRIORITY\n    addUnitPriority(\"date\", 9);\n    // PARSING\n    addRegexToken(\"D\", match1to2);\n    addRegexToken(\"DD\", match1to2, match2);\n    addRegexToken(\"Do\", function(isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n    });\n    addParseToken([\n        \"D\",\n        \"DD\"\n    ], DATE);\n    addParseToken(\"Do\", function(input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n    // MOMENTS\n    var getSetDayOfMonth = makeGetSet(\"Date\", true);\n    // FORMATTING\n    addFormatToken(\"DDD\", [\n        \"DDDD\",\n        3\n    ], \"DDDo\", \"dayOfYear\");\n    // ALIASES\n    addUnitAlias(\"dayOfYear\", \"DDD\");\n    // PRIORITY\n    addUnitPriority(\"dayOfYear\", 4);\n    // PARSING\n    addRegexToken(\"DDD\", match1to3);\n    addRegexToken(\"DDDD\", match3);\n    addParseToken([\n        \"DDD\",\n        \"DDDD\"\n    ], function(input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n    // HELPERS\n    // MOMENTS\n    function getSetDayOfYear(input) {\n        var dayOfYear = Math.round((this.clone().startOf(\"day\") - this.clone().startOf(\"year\")) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, \"d\");\n    }\n    // FORMATTING\n    addFormatToken(\"m\", [\n        \"mm\",\n        2\n    ], 0, \"minute\");\n    // ALIASES\n    addUnitAlias(\"minute\", \"m\");\n    // PRIORITY\n    addUnitPriority(\"minute\", 14);\n    // PARSING\n    addRegexToken(\"m\", match1to2);\n    addRegexToken(\"mm\", match1to2, match2);\n    addParseToken([\n        \"m\",\n        \"mm\"\n    ], MINUTE);\n    // MOMENTS\n    var getSetMinute = makeGetSet(\"Minutes\", false);\n    // FORMATTING\n    addFormatToken(\"s\", [\n        \"ss\",\n        2\n    ], 0, \"second\");\n    // ALIASES\n    addUnitAlias(\"second\", \"s\");\n    // PRIORITY\n    addUnitPriority(\"second\", 15);\n    // PARSING\n    addRegexToken(\"s\", match1to2);\n    addRegexToken(\"ss\", match1to2, match2);\n    addParseToken([\n        \"s\",\n        \"ss\"\n    ], SECOND);\n    // MOMENTS\n    var getSetSecond = makeGetSet(\"Seconds\", false);\n    // FORMATTING\n    addFormatToken(\"S\", 0, 0, function() {\n        return ~~(this.millisecond() / 100);\n    });\n    addFormatToken(0, [\n        \"SS\",\n        2\n    ], 0, function() {\n        return ~~(this.millisecond() / 10);\n    });\n    addFormatToken(0, [\n        \"SSS\",\n        3\n    ], 0, \"millisecond\");\n    addFormatToken(0, [\n        \"SSSS\",\n        4\n    ], 0, function() {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, [\n        \"SSSSS\",\n        5\n    ], 0, function() {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, [\n        \"SSSSSS\",\n        6\n    ], 0, function() {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, [\n        \"SSSSSSS\",\n        7\n    ], 0, function() {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, [\n        \"SSSSSSSS\",\n        8\n    ], 0, function() {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, [\n        \"SSSSSSSSS\",\n        9\n    ], 0, function() {\n        return this.millisecond() * 1000000;\n    });\n    // ALIASES\n    addUnitAlias(\"millisecond\", \"ms\");\n    // PRIORITY\n    addUnitPriority(\"millisecond\", 16);\n    // PARSING\n    addRegexToken(\"S\", match1to3, match1);\n    addRegexToken(\"SS\", match1to3, match2);\n    addRegexToken(\"SSS\", match1to3, match3);\n    var token, getSetMillisecond;\n    for(token = \"SSSS\"; token.length <= 9; token += \"S\")addRegexToken(token, matchUnsigned);\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt((\"0.\" + input) * 1000);\n    }\n    for(token = \"S\"; token.length <= 9; token += \"S\")addParseToken(token, parseMs);\n    getSetMillisecond = makeGetSet(\"Milliseconds\", false);\n    // FORMATTING\n    addFormatToken(\"z\", 0, 0, \"zoneAbbr\");\n    addFormatToken(\"zz\", 0, 0, \"zoneName\");\n    // MOMENTS\n    function getZoneAbbr() {\n        return this._isUTC ? \"UTC\" : \"\";\n    }\n    function getZoneName() {\n        return this._isUTC ? \"Coordinated Universal Time\" : \"\";\n    }\n    var proto = Moment.prototype;\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== \"undefined\" && Symbol.for != null) proto[Symbol.for(\"nodejs.util.inspect.custom\")] = function() {\n        return \"Moment<\" + this.format() + \">\";\n    };\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\"dates accessor is deprecated. Use date instead.\", getSetDayOfMonth);\n    proto.months = deprecate(\"months accessor is deprecated. Use month instead\", getSetMonth);\n    proto.years = deprecate(\"years accessor is deprecated. Use year instead\", getSetYear);\n    proto.zone = deprecate(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\", getSetZone);\n    proto.isDSTShifted = deprecate(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\", isDaylightSavingTimeShifted);\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n    function preParsePostFormat(string) {\n        return string;\n    }\n    var proto$1 = Locale.prototype;\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(), utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n        format = format || \"\";\n        if (index != null) return get$1(format, index, field, \"month\");\n        var i, out = [];\n        for(i = 0; i < 12; i++)out[i] = get$1(format, i, field, \"month\");\n        return out;\n    }\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === \"boolean\") {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n            format = format || \"\";\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n            format = format || \"\";\n        }\n        var locale = getLocale(), shift = localeSorted ? locale._week.dow : 0, i, out = [];\n        if (index != null) return get$1(format, (index + shift) % 7, field, \"day\");\n        for(i = 0; i < 7; i++)out[i] = get$1(format, (i + shift) % 7, field, \"day\");\n        return out;\n    }\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, \"months\");\n    }\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, \"monthsShort\");\n    }\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, \"weekdays\");\n    }\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, \"weekdaysShort\");\n    }\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, \"weekdaysMin\");\n    }\n    getSetGlobalLocale(\"en\", {\n        eras: [\n            {\n                since: \"0001-01-01\",\n                until: Infinity,\n                offset: 1,\n                name: \"Anno Domini\",\n                narrow: \"AD\",\n                abbr: \"AD\"\n            },\n            {\n                since: \"0000-12-31\",\n                until: -Infinity,\n                offset: 1,\n                name: \"Before Christ\",\n                narrow: \"BC\",\n                abbr: \"BC\"\n            }\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function(number) {\n            var b = number % 10, output = toInt(number % 100 / 10) === 1 ? \"th\" : b === 1 ? \"st\" : b === 2 ? \"nd\" : b === 3 ? \"rd\" : \"th\";\n            return number + output;\n        }\n    });\n    // Side effect imports\n    hooks.lang = deprecate(\"moment.lang is deprecated. Use moment.locale instead.\", getSetGlobalLocale);\n    hooks.langData = deprecate(\"moment.langData is deprecated. Use moment.localeData instead.\", getLocale);\n    var mathAbs = Math.abs;\n    function abs() {\n        var data = this._data;\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n        return this;\n    }\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n        return duration._bubble();\n    }\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n    function absCeil(number) {\n        if (number < 0) return Math.floor(number);\n        else return Math.ceil(number);\n    }\n    function bubble() {\n        var milliseconds = this._milliseconds, days = this._days, months = this._months, data = this._data, seconds, minutes, hours, years, monthsFromDays;\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n        days += absFloor(hours / 24);\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n        data.days = days;\n        data.months = months;\n        data.years = years;\n        return this;\n    }\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n    function as(units) {\n        if (!this.isValid()) return NaN;\n        var days, months, milliseconds = this._milliseconds;\n        units = normalizeUnits(units);\n        if (units === \"month\" || units === \"quarter\" || units === \"year\") {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch(units){\n                case \"month\":\n                    return months;\n                case \"quarter\":\n                    return months / 3;\n                case \"year\":\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch(units){\n                case \"week\":\n                    return days / 7 + milliseconds / 6048e5;\n                case \"day\":\n                    return days + milliseconds / 864e5;\n                case \"hour\":\n                    return days * 24 + milliseconds / 36e5;\n                case \"minute\":\n                    return days * 1440 + milliseconds / 6e4;\n                case \"second\":\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case \"millisecond\":\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error(\"Unknown unit \" + units);\n            }\n        }\n    }\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) return NaN;\n        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n    }\n    function makeAs(alias) {\n        return function() {\n            return this.as(alias);\n        };\n    }\n    var asMilliseconds = makeAs(\"ms\"), asSeconds = makeAs(\"s\"), asMinutes = makeAs(\"m\"), asHours = makeAs(\"h\"), asDays = makeAs(\"d\"), asWeeks = makeAs(\"w\"), asMonths = makeAs(\"M\"), asQuarters = makeAs(\"Q\"), asYears = makeAs(\"y\");\n    function clone$1() {\n        return createDuration(this);\n    }\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + \"s\"]() : NaN;\n    }\n    function makeGetter(name) {\n        return function() {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n    var milliseconds = makeGetter(\"milliseconds\"), seconds = makeGetter(\"seconds\"), minutes = makeGetter(\"minutes\"), hours = makeGetter(\"hours\"), days = makeGetter(\"days\"), months = makeGetter(\"months\"), years = makeGetter(\"years\");\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n    var round = Math.round, thresholds = {\n        ss: 44,\n        s: 45,\n        m: 45,\n        h: 22,\n        d: 26,\n        w: null,\n        M: 11\n    };\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(), seconds = round(duration.as(\"s\")), minutes = round(duration.as(\"m\")), hours = round(duration.as(\"h\")), days = round(duration.as(\"d\")), months = round(duration.as(\"M\")), weeks = round(duration.as(\"w\")), years = round(duration.as(\"y\")), a = seconds <= thresholds.ss && [\n            \"s\",\n            seconds\n        ] || seconds < thresholds.s && [\n            \"ss\",\n            seconds\n        ] || minutes <= 1 && [\n            \"m\"\n        ] || minutes < thresholds.m && [\n            \"mm\",\n            minutes\n        ] || hours <= 1 && [\n            \"h\"\n        ] || hours < thresholds.h && [\n            \"hh\",\n            hours\n        ] || days <= 1 && [\n            \"d\"\n        ] || days < thresholds.d && [\n            \"dd\",\n            days\n        ];\n        if (thresholds.w != null) a = a || weeks <= 1 && [\n            \"w\"\n        ] || weeks < thresholds.w && [\n            \"ww\",\n            weeks\n        ];\n        a = a || months <= 1 && [\n            \"M\"\n        ] || months < thresholds.M && [\n            \"MM\",\n            months\n        ] || years <= 1 && [\n            \"y\"\n        ] || [\n            \"yy\",\n            years\n        ];\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) return round;\n        if (typeof roundingFunction === \"function\") {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) return false;\n        if (limit === undefined) return thresholds[threshold];\n        thresholds[threshold] = limit;\n        if (threshold === \"s\") thresholds.ss = limit - 1;\n        return true;\n    }\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) return this.localeData().invalidDate();\n        var withSuffix = false, th = thresholds, locale, output;\n        if (typeof argWithSuffix === \"object\") {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === \"boolean\") withSuffix = argWithSuffix;\n        if (typeof argThresholds === \"object\") {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) th.ss = argThresholds.s - 1;\n        }\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n        if (withSuffix) output = locale.pastFuture(+this, output);\n        return locale.postformat(output);\n    }\n    var abs$1 = Math.abs;\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) return this.localeData().invalidDate();\n        var seconds = abs$1(this._milliseconds) / 1000, days = abs$1(this._days), months = abs$1(this._months), minutes, hours, years, s, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;\n        if (!total) // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return \"P0D\";\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, \"\") : \"\";\n        totalSign = total < 0 ? \"-\" : \"\";\n        ymSign = sign(this._months) !== sign(total) ? \"-\" : \"\";\n        daysSign = sign(this._days) !== sign(total) ? \"-\" : \"\";\n        hmsSign = sign(this._milliseconds) !== sign(total) ? \"-\" : \"\";\n        return totalSign + \"P\" + (years ? ymSign + years + \"Y\" : \"\") + (months ? ymSign + months + \"M\" : \"\") + (days ? daysSign + days + \"D\" : \"\") + (hours || minutes || seconds ? \"T\" : \"\") + (hours ? hmsSign + hours + \"H\" : \"\") + (minutes ? hmsSign + minutes + \"M\" : \"\") + (seconds ? hmsSign + s + \"S\" : \"\");\n    }\n    var proto$2 = Duration.prototype;\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n    proto$2.toIsoString = deprecate(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\", toISOString$1);\n    proto$2.lang = lang;\n    // FORMATTING\n    addFormatToken(\"X\", 0, 0, \"unix\");\n    addFormatToken(\"x\", 0, 0, \"valueOf\");\n    // PARSING\n    addRegexToken(\"x\", matchSigned);\n    addRegexToken(\"X\", matchTimestamp);\n    addParseToken(\"X\", function(input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken(\"x\", function(input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n    //! moment.js\n    hooks.version = \"2.29.4\";\n    setHookCallback(createLocal);\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: \"YYYY-MM-DDTHH:mm\",\n        DATETIME_LOCAL_SECONDS: \"YYYY-MM-DDTHH:mm:ss\",\n        DATETIME_LOCAL_MS: \"YYYY-MM-DDTHH:mm:ss.SSS\",\n        DATE: \"YYYY-MM-DD\",\n        TIME: \"HH:mm\",\n        TIME_SECONDS: \"HH:mm:ss\",\n        TIME_MS: \"HH:mm:ss.SSS\",\n        WEEK: \"GGGG-[W]WW\",\n        MONTH: \"YYYY-MM\"\n    };\n    return hooks;\n});\n\n});\n\nconst $3df07944bfa6aab3$export$8b251419efc915eb = ()=>{\n    return `<h1>Header</h1>`;\n};\n\n\nconst $d5c7001fb908dd0e$export$a06f1c675e846f6f = ()=>{\n    return `<h1>Footer</h1>`;\n};\n\n\n\nvar $45fvw = parcelRequire(\"45fvw\");\nconst $2b9f921e9352ca71$export$b94310965bed44e6 = ()=>{\n    const today = (0, (/*@__PURE__*/$parcel$interopDefault($45fvw)))().format(\"YYYY-MM-DD\");\n    return `<h1>Home</h1>\r\n    <h2>${today}</h2>\r\n    `;\n};\n\n\nconst $e73bf42412feb220$var$app = document.querySelector(\".app\");\n$e73bf42412feb220$var$app.innerHTML = `${(0, $3df07944bfa6aab3$export$8b251419efc915eb)()} ${(0, $2b9f921e9352ca71$export$b94310965bed44e6)()} ${(0, $d5c7001fb908dd0e$export$a06f1c675e846f6f)()}`;\n\n\n//# sourceMappingURL=index.84cefe51.js.map\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","import { Header } from \"./components/Header\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { Home } from \"./pages/Home\";\r\n\r\nconst app = document.querySelector(\".app\");\r\napp.innerHTML = `${Header()} ${Home()} ${Footer()}`;","export const Header = () => {\r\n    return `<h1>Header</h1>`;\r\n}","export const Footer = () => {\r\n    return `<h1>Footer</h1>`;\r\n}","import moment from \"moment/moment\";\r\n\r\nexport const Home = () => {\r\n    const today = moment().format(\"YYYY-MM-DD\");\r\n    return `<h1>Home</h1>\r\n    <h2>${today}</h2>\r\n    `;\r\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","factory","hooks","hookCallback","apply","arguments","isArray","input","Array","Object","prototype","toString","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","obj","k","getOwnPropertyNames","length","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","arrLen","push","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","len","token","getSetMillisecond","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","argLen","slice","join","stack","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","sign","pow","max","substr","keys","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","makeFormatFunction","array","match","replace","mom","output","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","addRegexToken","regex","strictRegex","isStrict","regexEscape","s","tokens","addParseToken","tokenLen","addWeekParseToken","_w","modMonth","n","x","indexOf","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonthsShort","split","MONTHS_IN_FORMAT","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","min","getSetMonth","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","RegExp","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","daysInYear","y","parseTwoDigitYear","parseInt","getSetYear","createDate","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdaysShort","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","day","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","w","ww","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","aliasedRequire","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","chooseLocale","names","j","next","commonPrefix","arr1","arr2","minl","checkOverflow","_a","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","isoDatesLen","isoTimesLen","configFromStringAndFormat","configFromRFC2822","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","weekdayStr","weekdayProvided","parsedInput","getDay","calculateOffset","obsOffset","militaryOffset","numOffset","hm","setUTCMinutes","getUTCMinutes","defaults","c","configFromArray","weekYear","temp","weekdayOverflow","curWeek","nowValue","currentDate","expectedWeekday","yearToUse","now","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","GG","W","E","createLocal","_week","gg","_dayOfYear","_nextDay","ISO_8601","RFC_2822","hour","isPm","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","meridiemHour","erasConvertYear","prepareConfig","preparse","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromString","createFromInputFallback","configFromObject","dayOrDate","minute","second","millisecond","isUTC","add","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","isDurationValid","unitHasDecimal","orderLen","parseFloat","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","matches","chunk","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","base","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","isString","String","monthDiff","adjust","wholeMonthDiff","anchor","anchor2","newLocaleData","defaultFormat","defaultFormatUtc","lang","localStartOfDate","utcStartOfDate","matchEraAbbr","erasAbbrRegex","computeErasParse","abbrPieces","namePieces","narrowPieces","eras","narrow","_erasRegex","_erasNameRegex","_erasAbbrRegex","_erasNarrowRegex","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","erasNameRegex","erasNarrowRegex","erasParse","_eraYearOrdinalRegex","eraYearOrdinalParse","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","proto","preParsePostFormat","time","formats","arrayTest","dataTypeTest","filter","item","isMomentInputObject","property","objectTest","propertyTest","properties","propertyLen","isCalendarSpec","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","MS_PER_HOUR","dividend","MS_PER_MINUTE","MS_PER_SECOND","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","getPrioritizedUnits","unitsObj","u","priority","prioritizedLen","toArray","toObject","toDate","toISOString","keepOffset","inspect","prefix","suffix","zone","isLocal","Symbol","for","toJSON","unix","creationData","eraName","since","until","eraNarrow","eraAbbr","eraYear","dir","isoWeeks","weekInfo","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","_eras","Infinity","isFormat","_monthsShort","_monthsParseExact","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","substituteTimeAgo","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","monthsFromDays","argWithSuffix","argThresholds","withSuffix","th","assign","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","DATE","TIME","TIME_SECONDS","TIME_MS","WEEK","MONTH","$45fvw","$e73bf42412feb220$var$app","document","querySelector","innerHTML","today","__esModule","default"],"version":3,"file":"index.84cefe51.js.map"}